services:
  postgres:
    image: postgres:13
    container_name: product-postgres
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - product-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d productdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: product-backend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/productdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    networks:
      - product-network

  db-init:
    image: postgres:13
    container_name: product-db-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGDATABASE: productdb
      PGUSER: postgres
      PGPASSWORD: password
    volumes:
      - ./init-db.sql:/init-db.sql
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        echo 'Running initialization script...' &&
        psql -f /init-db.sql &&
        echo 'Database initialized successfully!' &&
        exit 0
      "
    networks:
      - product-network

volumes:
  postgres_data:

networks:
  product-network:
    driver: bridge
